{"version":3,"sources":["firebase.js","routes/Auth.js","components/Nweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","auth","getAuth","storage","getStorage","Auth","React","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","then","result","catch","className","icon","faTwitter","color","size","style","marginBottom","type","placeholder","required","onClick","prev","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","autoFocus","src","alt","faTrash","faPencilAlt","Home","userObj","nweet","setNweet","nweets","setNweets","attachment","setAttachment","useEffect","onSnapshot","query","collection","orderBy","snapshot","nweetArray","docs","map","data","fileRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","createdAt","Date","now","creatorId","addDoc","console","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","marginTop","item","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","q","where","getDocs","forEach","log","e","updateProfile","currentUser","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","props","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2803ed23.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBDtT6kAP6yEgE4TwzCB1SfsUbpcL-KsMk\",\r\n  authDomain: \"nwitter-52649.firebaseapp.com\",\r\n  projectId: \"nwitter-52649\",\r\n  storageBucket: \"nwitter-52649.appspot.com\",\r\n  messagingSenderId: \"373632119746\",\r\n  appId: \"1:373632119746:web:e029e3cc94b45ae248dc5b\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const db = getFirestore();\r\nexport const auth = getAuth();\r\nexport const storage = getStorage();\r\n","import React from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n} from \"firebase/auth\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nconst Auth = () => {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [newAccount, setNewAccount] = React.useState(true);\r\n  const [error, setError] = React.useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await createUserWithEmailAndPassword(auth, email, password);\r\n      } else {\r\n        data = await signInWithEmailAndPassword(auth, email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onSocialClick = async (event) => {\r\n    const name = event.target.name;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n    signInWithPopup(auth, provider)\r\n      .then((result) => {})\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Cretate Account\"}\r\n      </span>\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { db, storage } from \"../firebase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { deleteObject, ref } from \"firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = React.useState(false);\r\n  const [newNweet, setNewNweet] = React.useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete to this nweet?\");\r\n    if (ok) {\r\n      await deleteDoc(doc(db, `nweets/${nweetObj.id}`));\r\n      if (nweetObj.attachmentUrl) {\r\n        await deleteObject(ref(storage, nweetObj.attachmentUrl));\r\n      }\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(doc(db, `nweets/${nweetObj.id}`), {\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    setNewNweet(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit you nweet\"\r\n              value={newNweet}\r\n              required\r\n              onChange={onChange}\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} alt=\"img\" />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React from \"react\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  getDocs,\r\n  onSnapshot,\r\n  query,\r\n  orderBy,\r\n} from \"firebase/firestore\";\r\nimport { db, storage } from \"../firebase\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweet, setNweet] = React.useState(\"\");\r\n  const [nweets, setNweets] = React.useState([]);\r\n  const [attachment, setAttachment] = React.useState(\"\");\r\n  const getNweets = async () => {\r\n    const querySnapshot = await getDocs(collection(db, \"nweets\"));\r\n    querySnapshot.forEach((document) => {\r\n      const nweetObject = {\r\n        ...document.data(),\r\n        id: document.id,\r\n      };\r\n      setNweets((prev) => [nweetObject, ...prev]);\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    onSnapshot(\r\n      query(collection(db, \"nweets\"), orderBy(\"createdAt\", \"desc\")),\r\n      (snapshot) => {\r\n        const nweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray);\r\n      }\r\n    );\r\n  }, []);\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      //파일 경로 참조 만들기\r\n      const fileRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\r\n      //storage 참조 경로로 파일 업로드 하기\r\n      const uploadFile = await uploadString(fileRef, attachment, \"data_url\");\r\n      //storage에 있는 파일 URL로 다운로드 받기\r\n      attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    try {\r\n      const docRef = await addDoc(collection(db, \"nweets\"), nweetObj);\r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n    }\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const value = event.target.value;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const files = event.target.files;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const result = finishedEvent.currentTarget.result;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearPhotoClick = () => {\r\n    setAttachment(\"\");\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n          <input\r\n            className=\"factoryInput__input\"\r\n            value={nweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFileChange}\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n        />\r\n        {attachment && (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n              alt=\"img\"\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearPhotoClick}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </form>\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((item) => (\r\n          <Nweet\r\n            key={item.id}\r\n            nweetObj={item}\r\n            isOwner={item.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { collection, getDocs, orderBy, query, where } from \"firebase/firestore\";\r\nimport { updateProfile } from \"firebase/auth\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = React.useState(\r\n    userObj.displayName\r\n  );\r\n  const onLogOutClick = () => {\r\n    auth.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const getMyNweets = async () => {\r\n    const q = query(\r\n      collection(db, \"nweets\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      orderBy(\"createAt\", \"desc\")\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      console.log(doc.id, \" => \", doc.data());\r\n    });\r\n  };\r\n  React.useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n  const onChange = (e) => {\r\n    setNewDisplayName(e.target.value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(await auth.currentUser, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes//Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\nimport AppRouter from \"./Router\";\nimport { auth } from \"../firebase\";\nimport { updateProfile } from \"firebase/auth\";\n\nconst App = (props) => {\n  const [init, setInit] = React.useState(false);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(auth.currentUser);\n  const [userObj, setUserObj] = React.useState(null);\n  React.useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        if (user.displayName === null) {\n          updateProfile(user, { displayName: \"User\" });\n        }\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = auth.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; Nwitter {new Date().getFullYear()}</footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}